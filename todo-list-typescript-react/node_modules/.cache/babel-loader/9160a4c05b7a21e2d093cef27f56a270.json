{"ast":null,"code":"var _jsxFileName = \"/home/jhou/todo-list-typescript-react/src/components/todoItem.component.tsx\";\nimport React from \"react\";\nimport \"../css/todoItem.css\";\nexport const TodoItem = ({\n  todo,\n  todoToggle\n}) => {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: todo.completedStatus ? \"completed\" : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: todo.completedStatus,\n    onChange: () => todoToggle(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), todo.text));\n};","map":{"version":3,"sources":["/home/jhou/todo-list-typescript-react/src/components/todoItem.component.tsx"],"names":["React","TodoItem","todo","todoToggle","completedStatus","undefined","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AAOA,OAAO,MAAMC,QAAgD,GAAG,CAAC;AAC/DC,EAAAA,IAD+D;AAE/DC,EAAAA;AAF+D,CAAD,KAG1D;AACJ,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAED,IAAI,CAACE,eAAL,GAAuB,WAAvB,GAAqCC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAEH,IAAI,CAACE,eAFhB;AAGE,IAAA,QAAQ,EAAE,MAAMD,UAAU,CAACD,IAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGA,IAAI,CAACI,IANR,CADF,CADF;AAYD,CAhBM","sourcesContent":["import React from \"react\";\nimport \"../css/todoItem.css\";\n\ninterface TodoItemProps {\n  todo: Todo;\n  todoToggle: TodoToggle;\n}\n\nexport const TodoItem: React.FunctionComponent<TodoItemProps> = ({\n  todo,\n  todoToggle,\n}) => {\n  return (\n    <li>\n      <label className={todo.completedStatus ? \"completed\" : undefined}>\n        <input\n          type=\"checkbox\"\n          checked={todo.completedStatus}\n          onChange={() => todoToggle(todo)}\n        />\n        {todo.text}\n      </label>\n    </li>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}